#!/bin/sh

# Resource Impl: https://concourse-ci.org/implementing-resource-types.html#resource-check

set -o errexit
set -o nounset

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# parse incoming config data
payload=$(cat)

bucket="$(echo "${payload}" | jq -r '.source.bucket')"
if [ -z "${bucket}" ]; then
  echo "No bucket supplied"
  exit 1
fi

endpoint_url="$(echo "${payload}" | jq -r '.source.endpoint // ""')"
region="$(echo "${payload}" | jq -r '.source.region // "us-east-1"')"
use_v4="$(echo "${payload}" | jq -r '.source.use_v4 // ""')"
path="$(echo "${payload}" | jq -r '.source.path // ""')"
if [ "${path}" = '/' ]; then
  path=""
fi
suffix="$(echo "${payload}" | jq -r '.source.suffix // ""')"
skip_ssl_verification="$(echo "${payload}" | jq -r '.source.skip_ssl_verification // ""')"
ca_bundle="$(echo "${payload}" | jq -r '.source.ca_bundle // ""')"
encryption_key="$(echo "${payload}" | jq -r '.source.encryption_key // ""')"

# export for `aws` cli
AWS_ACCESS_KEY_ID=$(echo "$payload" | jq -r '.source.access_key_id')
AWS_SECRET_ACCESS_KEY=$(echo "$payload" | jq -r '.source.secret_access_key')

# Due to precedence rules, must be unset to support AWS IAM Roles.
if [ -n "${AWS_ACCESS_KEY_ID}" ] && [ -n "${AWS_SECRET_ACCESS_KEY}" ]; then
  export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
  export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
fi

endpoint_opt=""
if [ -n "${endpoint_url}" ]; then
  endpoint_opt="--endpoint-url=${endpoint_url}"
fi

export AWS_DEFAULT_REGION=$region
if [ "${use_v4}" = "true" ];then
  aws configure set default.s3.signature_version s3v4
fi

ssl_verification_opt=""
if [ "${skip_ssl_verification}" = "true" ]; then
  ssl_verification_opt="--no-verify-ssl"
  export PYTHONWARNINGS="ignore:Unverified HTTPS request"
fi

if [ -n "${ca_bundle}" ]; then
  echo "${ca_bundle}" > /tmp/ca.pem
  export AWS_CA_BUNDLE=/tmp/ca.pem
fi

with_enc=""
if [ "${encryption_key}" != "" ];then
  with_enc=".gpg"
fi

timeouts="--cli-read-timeout 5 --cli-connect-timeout 5"

echo "Checking path in S3..."
# shellcheck disable=SC2086
aws ${timeouts} ${endpoint_opt} ${ssl_verification_opt} s3 ls "s3://${bucket}/${path}" > /dev/null || ( echo "Path check failed, check path provided exists and creds are valid." && exit 1 )

# Consider the most recent LastModified timestamp as the most recent version.
# We don't want options encapsulated in quotes as they are space-separated switches
# shellcheck disable=SC2086
version=$(aws ${ssl_verification_opt} ${endpoint_opt} ${timeouts} s3 ls  --recursive "s3://${bucket}/${path}" | grep "${suffix}${with_enc}\$" | sha1sum | awk '{print $1}')

jq -n "[
  {
    ref: \"${version}\"
  }
]" >&3
